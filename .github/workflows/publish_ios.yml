# A reusable workflow file for publishing the iOS example app.

name: Publish iOS App

on:
  workflow_call:
    inputs:
      version:
        description: "The current version number"
        required: true
        type: string
      build-number:
        description: "The current build number"
        required: true
        type: string
      build-on:
        description: "The branch the build is executed on, which determines the current build type"
        required: true
        type: string
    secrets:
      HOST_NAME:
        required: true
      FIREBASE_TOKEN:
        required: true
      FIREBASE_APP_ID_IOS:
        required: true
      MATCH_GIT_AUTHORIZATION:
        required: true
      MATCH_GIT_URL:
        required: true
      MATCH_PASSWORD:
        required: true
      DEVELOPER_PORTAL_TEAM_ID:
        required: true
      CODE_SIGNING_IDENTITY:
        required: true
      PROVISIONING_PROFILE_SPECIFIER:
        required: true
      TEMP_KEYCHAIN_NAME:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
      PRIVATE_DART_REPOSITORY:
        required: false
      PRIVATE_NATIVE_REPOSITORY:
        required: false
      PRIVATE_REPOSITORY_API_KEY:
        required: true

env:
  FLUTTER_VERSION: '3.0.1'
  XCODE_VERSION: '15.0.1'
  RUBY_VERSION: '3.0'
  CURRENT_BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  publish:
    name: Publish
    runs-on: macos-13

    steps:
      # Checkout the repository under $GITHUB_WORKSPACE
      - name: Checkout Project
        uses: actions/checkout@v3

      # Update the Auth Cloud configuration
      - name: Update Configuration
        uses: './.github/actions/update-config'
        with:
          host-name: ${{ secrets.HOST_NAME }}
          private-dart-repository: ${{ secrets.PRIVATE_DART_REPOSITORY }}
          version: ${{ inputs.version }}

      # Make sure the stable version of Flutter is available
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: ${{ runner.os }}-flutter-cache-${{ env.FLUTTER_VERSION }}

      # Set Ruby version and Cache RubyGem dependencies
      - name: Cache RubyGem Dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: 'ios'

      # Increment build number in the pubspec.yaml file
      - name: Increment Build Number
        run: |
          dart pub global activate cider
          cider bump build --build=${{ inputs.build-number }}

      # Resolve Flutter packages
      - name: Resolve Flutter Packages
        run: |
          echo '${{ secrets.PRIVATE_REPOSITORY_API_KEY }}' | dart pub token add ${{ secrets.PRIVATE_DART_REPOSITORY }}
          flutter pub get

      # Ensure correct Xcode version is installed
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      # Create a release build
      - name: Archive Preparation
        run: flutter build ios --release --no-codesign

      # Distribute the iOS app
      - name: Run Fastlane
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MATCH_GIT_AUTHORIZATION: ${{ secrets.MATCH_GIT_AUTHORIZATION }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          DEVELOPER_PORTAL_TEAM_ID: ${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}
          CODE_SIGNING_IDENTITY: ${{ secrets.CODE_SIGNING_IDENTITY }}
          PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
          TEMP_KEYCHAIN_NAME: ${{ secrets.TEMP_KEYCHAIN_NAME }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          PRIVATE_NATIVE_REPOSITORY: ${{ secrets.PRIVATE_NATIVE_REPOSITORY }}
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: '${{ inputs.build-on }}'
          subdirectory: 'ios'
          options: |
            { 
              "version": "${{ inputs.version }}",
              "build_number": "${{ inputs.build-number }}"
            }
