# A reusable workflow file for building the native apps based on the inputs.

name: Build Example App

on:
  workflow_call:
    inputs:
      build-android:
        description: "Tells whether Android app build is needed"
        default: false
        required: false
        type: boolean
      build-ios:
        description: "Tells whether iOS app build is needed"
        default: false
        required: false
        type: boolean
    secrets:
      GITHUB_USERNAME:
        required: false
      GITHUB_PERSONAL_ACCESS_TOKEN:
        required: false
      PRIVATE_DART_REPOSITORY:
        required: false
      PRIVATE_NATIVE_REPOSITORY:
        required: false
      PRIVATE_REPOSITORY_API_KEY:
        required: false

env:
  FLUTTER_VERSION: '3.19.0'
  XCODE_VERSION: '15.0.1'
  JAVA_VERSION: '11'
  RUBY_VERSION: '3.0'
  PRIVATE_DART_REPOSITORY: ${{ secrets.PRIVATE_DART_REPOSITORY }}
  PRIVATE_REPOSITORY_API_KEY: ${{ secrets.PRIVATE_REPOSITORY_API_KEY }}

jobs:
  build_app:
    name: Build
    runs-on: macos-13

    steps:
      # Checkout the repository under $GITHUB_WORKSPACE
      - name: Checkout Project
        uses: actions/checkout@v3

      # Make sure the stable version of Flutter is available
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: ${{ runner.os }}-flutter-cache-${{ env.FLUTTER_VERSION }}

      # Update the private dependencies
      - name: Update Configuration
        if: ${{ env.PRIVATE_DART_REPOSITORY && env.PRIVATE_REPOSITORY_API_KEY }}
        uses: './.github/actions/update-config'
        with:
          private-dart-repository: ${{ secrets.PRIVATE_DART_REPOSITORY }}
          private-repository-api-key: ${{ secrets.PRIVATE_REPOSITORY_API_KEY }}

      # Resolve Flutter packages
      - name: Resolve Flutter Packages
        run: flutter pub get

      #################################
      # Build iOS Example (if needed) #
      #################################

      # Ensure correct Xcode version is installed.
      - name: Setup Xcode
        if: ${{ inputs.build-ios }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      # Set Ruby version and Cache RubyGem dependencies
      - name: Cache RubyGem Dependencies
        if: ${{ inputs.build-ios }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: 'ios'

      # Build the iOS app
      - name: Build iOS App
        if: ${{ inputs.build-ios }}
        env:
          PRIVATE_NATIVE_REPOSITORY: ${{ secrets.PRIVATE_NATIVE_REPOSITORY }}
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'pr'
          subdirectory: 'ios'

      #####################################
      # Build Android Example (if needed) #
      #####################################

      # Ensure correct Java version is installed
      - name: Setup Java JDK
        if: ${{ inputs.build-android }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      # Set Ruby version and Cache RubyGem dependencies
      - name: Cache RubyGem Dependencies
        if: ${{ inputs.build-android }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: 'android'

      # Build the Android app
      - name: Build Android App
        if: ${{ inputs.build-android }}
        env:
          PRIVATE_NATIVE_REPOSITORY: ${{ secrets.PRIVATE_NATIVE_REPOSITORY }}
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'pr'
          subdirectory: 'android'
