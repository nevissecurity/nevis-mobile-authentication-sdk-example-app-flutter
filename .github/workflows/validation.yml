# A reusable workflow file for validating the Flutter code.
# Checks the format and analyzes the code.

name: Validate App

on:
  workflow_call:
    inputs:
      version:
        description: "The current version number"
        required: false
        type: string
    secrets:
      PRIVATE_DART_REPOSITORY:
        required: false
      PRIVATE_REPOSITORY_API_KEY:
        required: false

env:
  FLUTTER_VERSION: '3.19.0'
  PRIVATE_DART_REPOSITORY: ${{ secrets.PRIVATE_DART_REPOSITORY }}
  PRIVATE_REPOSITORY_API_KEY: ${{ secrets.PRIVATE_REPOSITORY_API_KEY }}

jobs:
  validation:
    name: Validate
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository under $GITHUB_WORKSPACE
      - name: Checkout Project
        uses: actions/checkout@v3

      # Make sure the stable version of Flutter is available
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: ${{ runner.os }}-flutter-cache-${{ env.FLUTTER_VERSION }}

      # Update the private dependencies
      - name: Update Configuration
        if: ${{ env.PRIVATE_DART_REPOSITORY && env.PRIVATE_REPOSITORY_API_KEY && inputs.version }}
        uses: './.github/actions/update-config'
        with:
          private-dart-repository: ${{ secrets.PRIVATE_DART_REPOSITORY }}
          private-repository-api-key: ${{ secrets.PRIVATE_REPOSITORY_API_KEY }}
          version: ${{ inputs.version }}

      # Resolve Flutter packages
      - name: Resolve Flutter Packages
        run: flutter pub get

      # Run Dart Format to ensure formatting is valid
      - name: Run Dart Format
        run: dart format --set-exit-if-changed .

      # Run Flutter Analyzer
      - name: Run Flutter Analyzer
        run: flutter analyze
